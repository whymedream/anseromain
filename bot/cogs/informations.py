import disnake
from disnake.ext import commands
from bot.mongodb import db
from bot.mongodb import get_user, get_currency
import asyncio
from bot.cogs.economy import task
import pymongo


class Info(commands.Cog):
    def __init__(self, bot):
        self.bot: commands.Bot = bot

    @commands.command(name='–±–æ—Ç-–∏–Ω—Ñ–æ', aliases=['info', 'botinfo', 'bot-info', '–±–æ—Ç–∏–Ω—Ñ–æ'])
    async def bot(self, ctx: commands.Context):
        """
        **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ**\n
        –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: `!–±–æ—Ç-–∏–Ω—Ñ–æ`
        """
        regs = 0
        async for _ in db.users.find({}):
            regs += 1
        embed = disnake.Embed(color=0x303136)
        embed.title = 'Bot Information'
        embed.description = f"**~ –°–∏—Å—Ç–µ–º–∞**\n" \
                            f"**‚Ä¢ –ü–∏–Ω–≥:** `{round(self.bot.latency * 1000, 2)}–º—Å`\n" \
                            f"**~ –°–µ—Ä–≤–µ—Ä–∞**\n" \
                            f"**‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤:** `{len(self.bot.guilds)}`\n" \
                            f"**‚Ä¢ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:** `{regs}`\n\n"
        embed.set_footer(text='Developer: –§–∏–∑–∏–∫#3333, –õ–∏—Å#3221',
                        icon_url='https://emoji.gg/assets/emoji/5579-developerbadge.png?t=1616827671%27')
        embed.add_field(name='~ –°—Å—ã–ª–∫–∏',
                        value=f'[–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞](https://discord.com/api/oauth2/authorize?client_id=1105949383645745275&permissions=8&scope=bot)'\
                              f'\n[–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏]('
                              f'https://discord.gg/xbNMu3JRUC)')
        ca = self.bot.user.created_at
        embed.add_field(inline=False, name="~ Bot creation date",
                        value=f'<t:{int(ca.timestamp())}> (<t:{int(ca.timestamp())}:R>)')

        embed.add_field(inline=False, name="–í–ù–ò–ú–ê–ù–ò–ï!",
                        value=f'–ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Å—Ç–∞–¥–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏!')

        await ctx.send(embed=embed)
    
    @commands.command(name='–ø—Ä–æ—Ñ–∏–ª—å', aliases=['user-info', 'user-profile', '—é–∑–µ—Ä', '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', 'p', '–ø', 'user'])
    async def profile(self, ctx: commands.Context, member: disnake.Member = None):
        """
        **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞ (—Å–≤–æ–π/–¥—Ä—É–≥–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞)**\n
        –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: `!–ø—Ä–æ—Ñ–∏–ª—å, !–ø—Ä–æ—Ñ–∏–ª—å @User123`
        """
        if member is None:
            member = ctx.author
        user = await get_user(ctx.guild.id, member.id)
        badges = await db.badges.find_one({'uid': member.id})
        if badges is None:
            await db.badges.insert_one({
            "uid": member.id,
            "badges": '',
            })
            badges = await db.badges.find_one({'uid': member.id})
        emb = disnake.Embed(color=0x2b2d31)
        emb.set_author(name=f'{member} | –ü—Ä–æ—Ñ–∏–ª—å')
        emb.set_thumbnail(url=member.display_avatar)
        emb.set_footer(text=f'ID: {member.id}', icon_url=member.display_avatar)
        if member.id == 1064250083899625482:
            emb.add_field(name='`üë∑‚Äç‚ôÇÔ∏è`–î–æ–ª–∂–Ω–æ—Å—Ç—å', value='–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫')
        if member.id == 594200610631581697:
            emb.add_field(name='`üë∑‚Äç‚ôÇÔ∏è`–î–æ–ª–∂–Ω–æ—Å—Ç—å', value='–ö–æ—Ç —Å –∫—Ä—É–∂–∫–æ–π')
        if badges['badges'] != '':
            emb.add_field(name='–ó–Ω–∞—á–∫–∏', value=f'{badges["badges"]}', inline=False)
        emb.add_field(name=f'`üí∏`–ë–∞–ª–∞–Ω—Å', value=f'{user["balance"]}')
        emb.add_field(name='`‚ù§Ô∏è`–°–∏–º–ø–∞—Ç–∏–∏', value=f'{user["likes"]}\n')
        emb.add_field(name='`‚úâ`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π', value=f'{user["messages"]}', inline=False)
        emb.add_field(name='`üì©`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥', value=f'{user["commands_done"]}')
        if ctx.author != member and ctx.author.id not in user["subscribers"]:
            components = [
                disnake.ui.Button(style=disnake.ButtonStyle.green, label='‚ù§Ô∏è', custom_id='like'),
            ]
        else:
            components = None
        message: disnake.Message = await ctx.send(embed=emb, components=components)
        try:
            button_click: disnake.MessageInteraction = await self.bot.wait_for('button_click', timeout=60.0, check=lambda i: i.author == ctx.author and i.message.id == message.id)
            if button_click.component.custom_id == 'like':
                await db.users.update_one({"gid": ctx.guild.id, "uid": member.id}, {"$inc": {"likes": 1}})
                await db.users.update_one({"gid": ctx.guild.id, "uid": member.id}, {"$push": {"subscribers": ctx.author.id}})
                user = await get_user(ctx.guild.id, member.id)
                emb_in_dm = disnake.Embed(color=0x2b2d31)
                emb_in_dm.set_author(name=f'{member} | –û–ø–æ–≤–µ—â–µ–Ω–∏—è')
                emb_in_dm.description = f'{member.mention}\n–í–∞–º –≤—ã–¥–∞–ª–∏ —Å–∏–º–ø–∞—Ç–∏—é –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild.name}'
                emb_in_dm.add_field(name='`‚ù§Ô∏è`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–ø–∞—Ç–∏–π:', value=f'{user["likes"]}')
                await member.send(embed=emb_in_dm)
                emb = disnake.Embed(color=0x2b2d31)
                emb.set_author(name=f'{member} | –ü—Ä–æ—Ñ–∏–ª—å')
                emb.set_thumbnail(url=member.display_avatar)
                emb.set_footer(text=f'ID: {member.id}', icon_url=member.display_avatar)
                if badges["badges"] != '':
                    emb.add_field(name='–ó–Ω–∞—á–∫–∏', value=f'{user["badges"]}', inline=False)
                emb.add_field(name=f'`üí∏`–ë–∞–ª–∞–Ω—Å', value=f'{user["balance"]}')
                emb.add_field(name='`‚ù§`–°–∏–º–ø–∞—Ç–∏–∏', value=f'{user["likes"]}\n')
                emb.add_field(name='`‚úâ`–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π', value=f'{user["messages"]}', inline=False)
                emb.add_field(name='`üì©`–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∫–æ–º–∞–Ω–¥', value=f'{user["commands_done"]}')
                await message.edit(components = [
                disnake.ui.Button(style=disnake.ButtonStyle.green, label='‚ù§Ô∏è', custom_id='like', disabled=True),
                ], embed=emb)
        except asyncio.TimeoutError:
            await message.edit(components = [
                disnake.ui.Button(style=disnake.ButtonStyle.green, label='‚ù§Ô∏è', custom_id='like', disabled=True),
            ])
    
    @commands.command(name='—Ç–æ–ø')
    async def top(self, ctx: disnake.MessageInteraction):
        """
        **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –ø–æ –±–∞–ª–∞–Ω—Å—É –Ω–∞ –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ**\n
        –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: `!—Ç–æ–ø`
        """
        currency = await get_currency(ctx.guild.id)
        title = f'{currency}           –¢–æ–ø 10 –ø–æ –±–∞–ª–∞–Ω—Å—É          {currency}'
        param = 'balance'
        user_list = []
        async for _ in db.users.find({'gid': ctx.guild.id}) \
                .sort([(param, pymongo.DESCENDING)]).limit(10):
            if _ not in user_list:
                user_list.append(_)
        description = ''
        x = 0
        for user in user_list:
            i = user['uid']
            try:
                member = await ctx.guild.fetch_member(i)
                rew_list = ['üèÜ', 'ü•à', 'ü•â']
                x += 1
                if x <= 3:
                    description += f'\n{rew_list[x - 1]} **{member.display_name}**\n' \
                                   f'> **`üí≤ –ù–∞–ª–∏—á–Ω—ã–µ:` {task(user[param])}** {currency}\n' \
                                   f'> **`üí≥ –ë–∞–Ω–∫:` {task(user["bank"])}** {currency}\n'
                else:
                    description += f'\n{x}. {member.display_name}\n' \
                                   f'> `üí≤ –ù–∞–ª–∏—á–Ω—ã–µ:` {task(user[param])} {currency}\n' \
                                   f'> `üí≥ –ë–∞–Ω–∫:` {task(user["bank"])} {currency}\n'
            except (Exception,):
                await db.users.delete_one({'gid': ctx.guild.id, 'uid': user['uid']})
        embed = disnake.Embed(description=description, color=0x303136, title=title)
        await ctx.send(embed=embed)
    
    @commands.command(name='–ª—Ç–æ–ø', aliases=['–ª–∞–π–∫-—Ç–æ–ø'])
    async def ltop(self, ctx: disnake.MessageInteraction):
        """
        **–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–æ–ø –ø–æ —Å–∏–º–ø–∞—Ç–∏—è–º –Ω–∞ –¥–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–µ**\n
        –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: `///`
        """
        currency = await get_currency(ctx.guild.id)
        title = f'‚ù§Ô∏è           –¢–æ–ø 10 –ø–æ —Å–∏–º–ø–∞—Ç–∏—è–º          ‚ù§Ô∏è'
        param = 'likes'
        user_list = []
        async for _ in db.users.find({'gid': ctx.guild.id}) \
                .sort([(param, pymongo.DESCENDING)]).limit(10):
            if _ not in user_list:
                user_list.append(_)
        description = ''
        x = 0
        for user in user_list:
            i = user['uid']
            try:
                member = await ctx.guild.fetch_member(i)
                rew_list = ['üèÜ', 'ü•à', 'ü•â']
                x += 1
                if x <= 3:
                    description += f'\n{rew_list[x - 1]} **{member.display_name}**\n' \
                                   f'> **`‚ù§Ô∏è –°–∏–º–ø–∞—Ç–∏–∏:` {task(user[param])}**\n'
                else:
                    description += f'\n{x}. {member.display_name}\n' \
                                   f'> **`‚ù§Ô∏è –°–∏–º–ø–∞—Ç–∏–∏:` {task(user[param])}**\n'
            except (Exception,):
                await db.users.delete_one({'gid': ctx.guild.id, 'uid': user['uid']})
        embed = disnake.Embed(description=description, color=0x303136, title=title)
        await ctx.send(embed=embed)
        
        

def setup(bot):
    bot.add_cog(Info(bot))